server:
  port: 8080
spring:
  application:
    name: accounts
  profiles:
    active: default
#  cloud:
#    config:
#      uri: http://localhost:8071
  config:
    import: optional:configserver:http://localhost:8071
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: 'update'
#    defer-datasource-initialization: 'true'
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: 'true'
    show-sql: 'true'
  h2:
    console:
      enabled: true

endpoints:
  shutdown:
    enable: true

management:
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
#          health,info,refresh
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl.defaultZone: http://localhost:8070/eureka

info:
  app:
    name: Account Microservice
    description: Bank Account App
    version: 1.0.0

resilience4j:
  circuitbreaker:
    configs.default.registerHealthIndicator: true # register all circuit breaker information to actuator
    instances:
      detailsForCustomerSupportApp:
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30000
        permittedNumberOfCallsInHalfOpenState: 2
  retry:
    configs.default.registerHealthIndicator: true
    instances:
      retryForCustomerDetails:
        maxAttempts: 3
        waitDuration: 2000
  ratelimiter:
    configs.default.registerHealthIndicator: true
    instances:
      sayHello:
        timeoutDuration: 5000
        limitRefreshPeriod: 5000
        limitForPeriod: 1



